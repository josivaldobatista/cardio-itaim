/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.cardioitaim.visao;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import br.com.cardioitaim.beans.BeansAgendamento;
import br.com.cardioitaim.beans.ModeloTabela;
import br.com.cardioitaim.conexao.ConexaoBD;
import br.com.cardioitaim.dao.AgendamentoDAO;

/**
 *
 * @author valdo
 */
public class FormAgendamento extends javax.swing.JFrame {

    /**
     * Creates new form FormAgenda
     */
    ConexaoBD conex = new ConexaoBD();
    BeansAgendamento agendamento = new BeansAgendamento();

    public FormAgendamento() {
        initComponents();
        preencherMedicos();
    }

    public void preencherMedicos() {
        conex.conectar();//CONECTANDO BD
        conex.executaSql("select * from medicos order by nome_medico");
        try {
            conex.resultSet.first();//BUSCANDO PRIMEIRO RESULTADO
            jComboBoxMedico.removeAllItems();//limpando o campo

            do {
                jComboBoxMedico.addItem(conex.resultSet.getString("nome_medico"));
            } while (conex.resultSet.next());

        } catch (SQLException ex) {
            JOptionPane.showConfirmDialog(rootPane, "Erro ao buscar os bairros " + ex.getLocalizedMessage());
        }

        conex.desconecta();//DESCONECTANDO BD
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelPrincipal = new javax.swing.JPanel();
        jLabelPaciente = new javax.swing.JLabel();
        jTextFieldBuscaPac = new javax.swing.JTextField();
        jButtonBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTablePacientes = new javax.swing.JTable();
        jPanelBotoes = new javax.swing.JPanel();
        jButtonSalvar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonSair = new javax.swing.JButton();
        jPanelOpcoes = new javax.swing.JPanel();
        jLabelExame = new javax.swing.JLabel();
        jComboBoxExame = new javax.swing.JComboBox<>();
        jLabelMedico = new javax.swing.JLabel();
        jComboBoxPeriodo = new javax.swing.JComboBox<>();
        jLabelMotivo = new javax.swing.JLabel();
        jComboBoxMedico = new javax.swing.JComboBox<>();
        jLabelData = new javax.swing.JLabel();
        jLabelHora = new javax.swing.JLabel();
        jComboBoxHora = new javax.swing.JComboBox<>();
        jLabelMin = new javax.swing.JLabel();
        jComboBoxMin = new javax.swing.JComboBox<>();
        jComboBoxMotivo = new javax.swing.JComboBox<>();
        jDateChooserData = new com.toedter.calendar.JDateChooser();
        jLabelFundo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Agendamento de Paciente");
        setIconImage(new ImageIcon(getClass().getResource("/imagens/icone_desktop.png")).getImage());
        setResizable(false);
        getContentPane().setLayout(null);

        jPanelPrincipal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelPaciente.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabelPaciente.setText("Paciente");

        jTextFieldBuscaPac.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jTextFieldBuscaPac.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldBuscaPacKeyPressed(evt);
            }
        });

        jButtonBuscar.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jButtonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icone_buscar_24.png"))); // NOI18N
        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });
        jButtonBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonBuscarKeyPressed(evt);
            }
        });

        jTablePacientes.setFont(new java.awt.Font("Segoe UI Semilight", 0, 12)); // NOI18N
        jTablePacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTablePacientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTablePacientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTablePacientes);

        jButtonSalvar.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jButtonSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icone_salvar_24x.png"))); // NOI18N
        jButtonSalvar.setText("Salvar");
        jButtonSalvar.setEnabled(false);
        jButtonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalvarActionPerformed(evt);
            }
        });

        jButtonCancelar.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icone_cancelar24x.png"))); // NOI18N
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.setEnabled(false);
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonSair.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jButtonSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icone_logout_32x.png"))); // NOI18N
        jButtonSair.setText("Sair");
        jButtonSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBotoesLayout = new javax.swing.GroupLayout(jPanelBotoes);
        jPanelBotoes.setLayout(jPanelBotoesLayout);
        jPanelBotoesLayout.setHorizontalGroup(
            jPanelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonCancelar)
                .addGap(18, 18, 18)
                .addComponent(jButtonSair, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelBotoesLayout.setVerticalGroup(
            jPanelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSair, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanelOpcoes.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabelExame.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabelExame.setText("Exame");

        jComboBoxExame.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jComboBoxExame.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nenhum", "Ecocardiograma", "ECG", "Holter", "Mapa", "Mapa e Holter" }));
        jComboBoxExame.setEnabled(false);

        jLabelMedico.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabelMedico.setText("Médico");

        jComboBoxPeriodo.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jComboBoxPeriodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Manhã", "Tarde" }));
        jComboBoxPeriodo.setEnabled(false);

        jLabelMotivo.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabelMotivo.setText("Motivo");

        jComboBoxMedico.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jComboBoxMedico.setEnabled(false);

        jLabelData.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabelData.setText("Data");

        jLabelHora.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabelHora.setText("Hora");

        jComboBoxHora.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jComboBoxHora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        jComboBoxHora.setEnabled(false);

        jLabelMin.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jLabelMin.setText("Min");

        jComboBoxMin.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jComboBoxMin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "10", "20", "30", "40", "50" }));
        jComboBoxMin.setEnabled(false);

        jComboBoxMotivo.setFont(new java.awt.Font("Segoe UI Semilight", 0, 14)); // NOI18N
        jComboBoxMotivo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nenhum", "Agendamento", "Consulta", "Exames" }));

        javax.swing.GroupLayout jPanelOpcoesLayout = new javax.swing.GroupLayout(jPanelOpcoes);
        jPanelOpcoes.setLayout(jPanelOpcoesLayout);
        jPanelOpcoesLayout.setHorizontalGroup(
            jPanelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOpcoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelOpcoesLayout.createSequentialGroup()
                        .addGroup(jPanelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelMedico)
                            .addComponent(jLabelMotivo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxMedico, 0, 262, Short.MAX_VALUE)
                            .addComponent(jComboBoxMotivo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanelOpcoesLayout.createSequentialGroup()
                        .addGroup(jPanelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelExame)
                            .addComponent(jLabelHora)
                            .addComponent(jLabelData))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelOpcoesLayout.createSequentialGroup()
                                .addComponent(jComboBoxHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelMin)
                                .addGap(12, 12, 12)
                                .addComponent(jComboBoxMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxPeriodo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jComboBoxExame, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooserData, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelOpcoesLayout.setVerticalGroup(
            jPanelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOpcoesLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelData, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooserData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelHora)
                    .addComponent(jComboBoxHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxExame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelExame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMedico)
                    .addComponent(jComboBoxMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelPrincipalLayout = new javax.swing.GroupLayout(jPanelPrincipal);
        jPanelPrincipal.setLayout(jPanelPrincipalLayout);
        jPanelPrincipalLayout.setHorizontalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPrincipalLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabelPaciente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldBuscaPac, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanelOpcoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(35, 35, 35))))
        );
        jPanelPrincipalLayout.setVerticalGroup(
            jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrincipalLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPaciente)
                    .addComponent(jTextFieldBuscaPac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanelOpcoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
        );

        getContentPane().add(jPanelPrincipal);
        jPanelPrincipal.setBounds(10, 60, 780, 420);

        jLabelFundo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/fundo_agendamento_800.png"))); // NOI18N
        getContentPane().add(jLabelFundo);
        jLabelFundo.setBounds(0, 0, 800, 490);

        setSize(new java.awt.Dimension(812, 524));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        preencherTabela("select id_paciente, nome_paciente, cpf_paciente, celular_paciente from pacientes where nome_paciente ~*'" + jTextFieldBuscaPac.getText() + "'");
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jTablePacientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePacientesMouseClicked
        String nome_Paciente = "" + jTablePacientes.getValueAt(jTablePacientes.getSelectedRow(), 1);
        conex.conectar();
        conex.executaSql("select * from pacientes where nome_paciente ='" + nome_Paciente + "'");
        try {
            conex.resultSet.first();
            jTextFieldBuscaPac.setText(conex.resultSet.getString("nome_paciente"));

            conex.desconecta();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "ERRO AO SELECIONAR OS DADOS!" + ex.getMessage());
        }

        //desbloqeando campos
        jDateChooserData.setEnabled(true);
        jComboBoxHora.setEnabled(true);
        jComboBoxMin.setEnabled(true);
        jComboBoxExame.setEnabled(true);
        jComboBoxMedico.setEnabled(true);
        jComboBoxMotivo.setEnabled(true);
        jComboBoxPeriodo.setEnabled(true);

        //desbloqueando botoes
        jButtonSalvar.setEnabled(true);
        jButtonCancelar.setEnabled(true);
    }//GEN-LAST:event_jTablePacientesMouseClicked

    private void jButtonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalvarActionPerformed
        if (jTextFieldBuscaPac.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "PROCURE UM PACIENTE PARA CONTINUAR!");
            jTextFieldBuscaPac.requestFocus();
        } else if (jDateChooserData.getDate() == null) {
            JOptionPane.showMessageDialog(null, "INFORME UMA DATA PARA CONTINUAR");
            jDateChooserData.requestFocus();
        } else {
            String horario = jComboBoxHora.getSelectedItem() + ":" + jComboBoxMin.getSelectedItem(); //juntando o campo hora com o vampo minuto.

            agendamento.setNomePaciente(jTextFieldBuscaPac.getText());
            agendamento.setData(jDateChooserData.getDate());
            agendamento.setHorario(horario);
            agendamento.setPeriodo((String) jComboBoxPeriodo.getSelectedItem());
            agendamento.setExame((String) jComboBoxExame.getSelectedItem());
            agendamento.setNomeMedico((String) jComboBoxMedico.getSelectedItem());
            agendamento.setMotivo((String) jComboBoxMotivo.getSelectedItem());
            agendamento.setStatus("Aberto");

            AgendamentoDAO daoAgendamento = new AgendamentoDAO();
            daoAgendamento.salvar(agendamento);

            //limpando os campos
            jTextFieldBuscaPac.setText("");
            jDateChooserData.setDate(null);
            jComboBoxHora.setSelectedItem(null);
            jComboBoxMin.setSelectedItem(null);
            jComboBoxPeriodo.setSelectedItem(null);
            jComboBoxExame.setSelectedItem(null);
            jComboBoxMedico.setSelectedItem(null);
            jComboBoxMotivo.setSelectedItem(null);
            jTablePacientes.clearSelection();

            //bloqueando botoes
            jDateChooserData.setEnabled(false);
            jComboBoxHora.setEnabled(false);
            jComboBoxMin.setEnabled(false);
            jComboBoxExame.setEnabled(false);
            jComboBoxMedico.setEnabled(false);
            jComboBoxMotivo.setEnabled(false);
            jComboBoxPeriodo.setEnabled(false);

            //bloquando botoes
            jButtonSalvar.setEnabled(false);
            jButtonCancelar.setEnabled(false);

            dispose();//fechando tela de agendamento
        }
    }//GEN-LAST:event_jButtonSalvarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        //limpando os campos
        jTextFieldBuscaPac.setText("");
        jDateChooserData.setDate(null);
        jComboBoxHora.setSelectedItem(null);
        jComboBoxMin.setSelectedItem(null);
        jComboBoxPeriodo.setSelectedItem(null);
        jComboBoxExame.setSelectedItem(null);
        jComboBoxMedico.setSelectedItem(null);
        jComboBoxMotivo.setSelectedItem("");
        jTablePacientes.clearSelection();

        //bloqueando campos
        jDateChooserData.setEnabled(false);
        jComboBoxHora.setEnabled(false);
        jComboBoxMin.setEnabled(false);
        jComboBoxExame.setEnabled(false);
        jComboBoxMedico.setEnabled(false);
        jComboBoxMotivo.setEnabled(false);
        jComboBoxPeriodo.setEnabled(false);

        //bloquando botoes
        jButtonSalvar.setEnabled(false);
        jButtonCancelar.setEnabled(false);

    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSairActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonSairActionPerformed

    private void jTextFieldBuscaPacKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBuscaPacKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            preencherTabela("select id_paciente, nome_paciente, cpf_paciente, celular_paciente from pacientes where nome_paciente ~*'" + jTextFieldBuscaPac.getText() + "'");
        }
    }//GEN-LAST:event_jTextFieldBuscaPacKeyPressed

    private void jButtonBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonBuscarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            preencherTabela("select id_paciente, nome_paciente, cpf_paciente, celular_paciente from pacientes where nome_paciente ~*'" + jTextFieldBuscaPac.getText() + "'");
        }
    }//GEN-LAST:event_jButtonBuscarKeyPressed

    public void preencherTabela(String Sql) {

        ArrayList dados = new ArrayList();
        String[] colunas = new String[]{"Id", "Nome", "CPF", "Celular"};

        conex.conectar();
        conex.executaSql(Sql);

        try {
            conex.resultSet.first();
            do {//fazendo alteração na tabela          
                dados.add(new Object[]{conex.resultSet.getInt("id_paciente"), conex.resultSet.getString("nome_paciente"),
                    conex.resultSet.getString("cpf_paciente"), conex.resultSet.getString("celular_paciente")});
            } while (conex.resultSet.next());//enquanto houver dados ele ira percorrer o registro.
        } catch (SQLException ex) {
//            JOptionPane.showMessageDialog(rootPane, "BUSQUE POR OUTRO MÉDICO PARA PREENCHER A TABELA!");
        }
        ModeloTabela modelotab = new ModeloTabela(dados, colunas);
        jTablePacientes.setModel(modelotab);
        //coluna 1 ID
        jTablePacientes.getColumnModel().getColumn(0).setPreferredWidth(40);
        jTablePacientes.getColumnModel().getColumn(0).setResizable(false); //bloqueando o redimencionamento pelo mouse
        //coluna 2 Nome
        jTablePacientes.getColumnModel().getColumn(1).setPreferredWidth(185);
        jTablePacientes.getColumnModel().getColumn(1).setResizable(false);//bloqueando o redimencionamento pelo mouse
        //coluna 3 CPF
        jTablePacientes.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTablePacientes.getColumnModel().getColumn(2).setResizable(false);//bloqueando o redimencionamento pelo mouse
        //coluna 4 Celular
        jTablePacientes.getColumnModel().getColumn(3).setPreferredWidth(93);
        jTablePacientes.getColumnModel().getColumn(3).setResizable(false);//bloqueando o redimencionamento pelo mouse

        //bloqueando a reordenação pelo mouse
        jTablePacientes.getTableHeader().setReorderingAllowed(false);
        //bloqueia o redimencionamento automatico.
        jTablePacientes.setAutoResizeMode(jTablePacientes.AUTO_RESIZE_OFF);
        jTablePacientes.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        conex.desconecta();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormAgendamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormAgendamento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonSair;
    private javax.swing.JButton jButtonSalvar;
    private javax.swing.JComboBox<String> jComboBoxExame;
    private javax.swing.JComboBox<String> jComboBoxHora;
    private javax.swing.JComboBox<String> jComboBoxMedico;
    private javax.swing.JComboBox<String> jComboBoxMin;
    private javax.swing.JComboBox<String> jComboBoxMotivo;
    private javax.swing.JComboBox<String> jComboBoxPeriodo;
    private com.toedter.calendar.JDateChooser jDateChooserData;
    private javax.swing.JLabel jLabelData;
    private javax.swing.JLabel jLabelExame;
    private javax.swing.JLabel jLabelFundo;
    private javax.swing.JLabel jLabelHora;
    private javax.swing.JLabel jLabelMedico;
    private javax.swing.JLabel jLabelMin;
    private javax.swing.JLabel jLabelMotivo;
    private javax.swing.JLabel jLabelPaciente;
    private javax.swing.JPanel jPanelBotoes;
    private javax.swing.JPanel jPanelOpcoes;
    private javax.swing.JPanel jPanelPrincipal;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTablePacientes;
    private javax.swing.JTextField jTextFieldBuscaPac;
    // End of variables declaration//GEN-END:variables
}
